{"version":3,"file":"static\\development\\pages\\index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/CurrentWeather.js","webpack:///./components/SearchCity.js","webpack:///./components/UnitToggle.js","webpack:///./components/WeatherInfo.js","webpack:///./pages/index.js","webpack:///external \"axios\"","webpack:///external \"moment\"","webpack:///external \"next/head\"","webpack:///external \"react\"","webpack:///external \"react-grid-system\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import React from \"react\";\r\nimport \"../styles/styles.scss\";\r\n\r\nconst CurrentWeather = ({\r\n  temperature,\r\n  description,\r\n  city,\r\n  feels_like,\r\n  humidity,\r\n  highTemp,\r\n  lowTemp,\r\n  country,\r\n  windspeed,\r\n  unit\r\n}) => {\r\n  const metric = Math.round(temperature);\r\n  const imperial = Math.round((temperature * 9/5) + 32);\r\n  return (\r\n    <section className=\"hero is-info is-bold\">\r\n      <div className=\"hero-body\">\r\n        <h1 className=\"has-text-centered is-family-sans-serif has-text-weight-bold has-text-black is-size-2\">\r\n          Current Weather\r\n        </h1>\r\n        <div className=\"container\">\r\n          <h1 className=\"is-size-3 has-text-centered is-family-sans-serif subtitle has-text-black\">\r\n            {unit === \"metric\" ? metric + \"°C\" : imperial + \"°F\"}\r\n          </h1>\r\n        </div>\r\n        <h2 className=\"is-size-4 is-capitalized has-text-centered is-family-sans-serif has-text-weight-medium has-text-black\">\r\n          {description}\r\n        </h2>\r\n        <h3 className=\"is-family-sans-serif has-text-dark has-text-centered\">\r\n          {city}, {country}\r\n        </h3>\r\n        <h5 className=\"is-family-sans-serif has-text-centered\">\r\n          Feels like: {unit === \"metric\" ? Math.round(feels_like) + \"°C\" : Math.round((feels_like * 9/5) + 32) + \"°F\"} | Humidity: {humidity}%\r\n        </h5>\r\n        <div className=\"has-text-centered\">\r\n          <span className=\"is-family-sans-serif\">\r\n            {unit === \"metric\" ? Math.round(highTemp) + \"°C\" : Math.round((highTemp * 9/5) + 32) + \"°F\"}\r\n          </span>{\" \"}\r\n          /{\" \"}\r\n          <span className=\"is-family-sans-serif\">\r\n          {unit === \"metric\" ? Math.round(lowTemp) + \"°C\" : Math.round((lowTemp * 9/5) + 32) + \"°F\"}\r\n          </span>\r\n        </div>\r\n        <h5 className=\"is-family-sans-serif has-text-centered\">\r\n          Windspeed: {unit === \"metric\" ? windspeed + \" m/s\" : (windspeed * 2.237).toFixed(1) + \" mph\"}\r\n        </h5>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CurrentWeather;\r\n","import React from \"react\";\r\nimport \"../styles/styles.scss\";\r\n\r\nconst SearchCity = ({ changeHandler, submitHandler, activeCity, keyPressHandler }) => (\r\n  <div className=\"field is-grouped centered-search\" onSubmit={submitHandler}>\r\n    <div className=\"control\">\r\n      <input\r\n        className=\"input\"\r\n        placeholder=\"Enter City\"\r\n        onChange={changeHandler}\r\n        onKeyPress={keyPressHandler}\r\n      />\r\n    </div>\r\n    <div className=\"control\">\r\n      <a className=\"button is-dark\" onClick={submitHandler}>\r\n        Search\r\n      </a>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default SearchCity;\r\n","import React from \"react\";\r\nimport \"../styles/styles.scss\";\r\n\r\nconst UnitToggle = ({ toggleUnit, unit }) => (\r\n  <div className=\"control centered-toggle-unit\">\r\n    <label className=\"radio\" htmlFor=\"celsius\">\r\n      <input\r\n        className=\"is-radio\"\r\n        type=\"radio\"\r\n        id=\"celsius\"\r\n        name=\"celsius\"\r\n        value=\"metric\"\r\n        checked={unit === \"metric\"}\r\n        onChange={toggleUnit}\r\n      />\r\n        Celsius\r\n    </label>\r\n    <label className=\"radio\" htmlFor=\"fahrenheit\">\r\n      <input\r\n        className=\"is-radio\"\r\n        type=\"radio\"\r\n        id=\"fahrenehit\"\r\n        name=\"fahrenheit\"\r\n        value=\"fahrenheit\"\r\n        checked={unit === \"imperial\"}\r\n        onChange={toggleUnit}\r\n      />\r\n       Fahrenheit\r\n    </label>\r\n  </div>\r\n);\r\n\r\nexport default UnitToggle;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Col } from \"react-grid-system\";\r\nimport \"../styles/styles.scss\";\r\n\r\nexport default class WeatherInfo extends React.Component {\r\n  render() {\r\n    return (\r\n      <Col\r\n        lg={2}\r\n        className=\"has-text-centered is-family-sans-serif weather-info\"\r\n      >\r\n        <div className=\"is-size-6 has-text-weight-bold\">{this.props.date}</div>\r\n        <h5>{moment(this.props.day).format(\"dddd\")}</h5>\r\n        <div className=\"weather-icon\">\r\n          <span>\r\n            <img\r\n              src={`http://openweathermap.org/img/wn/${this.props.icon}@2x.png`}\r\n            />\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <span>\r\n            {this.props.unit === \"metric\"\r\n              ? Math.round(this.props.maxTemp) + \"°C\"\r\n              : Math.round((this.props.maxTemp * 9) / 5 + 32) + \"°F\"}\r\n          </span>{\" \"}\r\n          / <span>{this.props.unit === \"metric\"\r\n              ? Math.round(this.props.minTemp) + \"°C\"\r\n              : Math.round((this.props.minTemp * 9) / 5 + 32) + \"°F\"}</span>\r\n        </div>\r\n        <div>\r\n          <h5 className=\"has-text-weight-semibold\">\r\n            Humidity:\r\n            <span className=\"is-normal\">{this.props.humidity}%</span>\r\n          </h5>\r\n        </div>\r\n        <div>\r\n          <h5 className=\"has-text-weight-semibold\">Weather: </h5>\r\n          <p className=\"is-capitalized\">{this.props.description}</p>\r\n        </div>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Head from \"next/head\";\r\nimport { Row } from \"react-grid-system\";\r\n\r\nimport WeatherInfo from \"../components/WeatherInfo\";\r\nimport CurrentWeather from \"../components/CurrentWeather\";\r\nimport SearchCity from \"../components/SearchCity\";\r\nimport UnitToggle from \"../components/UnitToggle\";\r\n\r\nimport \"../styles/styles.scss\";\r\n\r\nconst WEATHER_API_KEY = \"b71deb2566d82e77a5e670d0d3771d2a\";\r\nconst WEATHER_API_URL = \"http://api.openweathermap.org/data/2.5\";\r\n\r\nexport default class Index extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeCity: \"Kuala Lumpur\",\r\n      unit: \"metric\",\r\n      forecast: null\r\n    };\r\n    this.APIRequest = this.APIRequest.bind(this);\r\n    this.retrieveData = this.retrieveData.bind(this);\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n    this.changeHandler = this.changeHandler.bind(this);\r\n    this.toggleUnit = this.toggleUnit.bind(this);\r\n    this.getDay = this.getDay.bind(this);\r\n    this.formatDate = this.formatDate.bind(this);\r\n  }\r\n\r\n  // Mount original city\r\n  async componentDidMount() {\r\n    await this.APIRequest(this.state.activeCity);\r\n  }\r\n\r\n  // OpenWeatherMap API request\r\n  async APIRequest(cityName) {\r\n    const forecastUrl = `${WEATHER_API_URL}/forecast?q=${cityName}&units=${this.state.unit}&appid=${WEATHER_API_KEY}`;\r\n    await axios\r\n      .get(forecastUrl)\r\n      .then(res => {\r\n        this.retrieveData(res.data.list);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n\r\n    const weatherUrl = `${WEATHER_API_URL}/weather?q=${cityName}&units=${this.state.unit}&appid=${WEATHER_API_KEY}`;\r\n    axios.get(weatherUrl).then(res => {\r\n      const detail = res.data;\r\n      this.setState({\r\n        city: detail.name,\r\n        temperature: detail.main.temp,\r\n        description: detail.weather[0].description,\r\n        feels_like: detail.main.feels_like,\r\n        humidity: detail.main.humidity,\r\n        highTemp: detail.main.temp_max,\r\n        lowTemp: detail.main.temp_min,\r\n        country: detail.sys.country,\r\n        windspeed: detail.wind.speed\r\n      });\r\n    });\r\n  }\r\n\r\n  /* Display date in the format of DD/MM/YYYY */\r\n  formatDate(dateData) {\r\n    let date = dateData.split(\" \")[0].split(\"-\");\r\n    return `${date[2]}/${date[1]}/${date[0]}`;\r\n  }\r\n\r\n  // Display the week's day for weather forecast\r\n  getDay(date) {\r\n    let newDate = new Date();\r\n    const weekday = date * 1000;\r\n    return newDate.setTime(weekday);\r\n  }\r\n\r\n  /* Display weather forecast for the next five days. To simplify it, only the weather at 12 noon\r\n     will be displayed. */\r\n  retrieveData(data) {\r\n    const forecastData = data.filter(weatherData =>\r\n      weatherData.dt_txt.includes(\"12:00:00\")\r\n    );\r\n    this.setState({\r\n      forecast: forecastData\r\n    });\r\n  }\r\n\r\n  // Change Celsius to Fahrenheit and vice versa\r\n  toggleUnit() {\r\n    if (this.state.unit === \"metric\") {\r\n      this.setState({\r\n        unit: \"imperial\"\r\n      });\r\n    } else {\r\n      this.setState({\r\n        unit: \"metric\"\r\n      });\r\n    }\r\n  }\r\n\r\n  submitHandler(input) {\r\n    input.preventDefault();\r\n    this.APIRequest(this.state.activeCity);\r\n  }\r\n\r\n  changeHandler(input) {\r\n    input.preventDefault();\r\n    this.setState({\r\n      activeCity: input.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let cards = \"\";\r\n    let id = 1;\r\n    if (this.state.forecast) {\r\n      cards = this.state.forecast.map(data => {\r\n        return (\r\n          <WeatherInfo\r\n            key={id++}\r\n            date={this.formatDate(data.dt_txt)}\r\n            day={this.getDay(data.dt)}\r\n            maxTemp={data.main.temp_max}\r\n            minTemp={data.main.temp_min}\r\n            humidity={data.main.humidity}\r\n            description={data.weather[0].description}\r\n            icon={data.weather[0].icon}\r\n            unit={this.state.unit}\r\n          />\r\n        );\r\n      });\r\n    }\r\n    return (\r\n      <div>\r\n        <Head>\r\n          <title>Weather Application</title>\r\n        </Head>\r\n        <SearchCity\r\n          changeHandler={this.changeHandler}\r\n          submitHandler={this.submitHandler}\r\n          activeCity={this.state.activeCity}\r\n        />\r\n        <CurrentWeather\r\n          city={this.state.city}\r\n          temperature={this.state.temperature}\r\n          description={this.state.description}\r\n          feels_like={this.state.feels_like}\r\n          highTemp={this.state.highTemp}\r\n          lowTemp={this.state.lowTemp}\r\n          humidity={this.state.humidity}\r\n          country={this.state.country}\r\n          windspeed={this.state.windspeed}\r\n          unit={this.state.unit}\r\n        />\r\n        <UnitToggle toggleUnit={this.toggleUnit} unit={this.state.unit} />\r\n        <br />\r\n        <div className=\"section\">\r\n          <div className=\"container\">\r\n            <div className=\"columns\">\r\n              <div className=\"column tile is-ancestor is-centered\">\r\n                <div className=\"tile\">\r\n                  <div className=\"tile is-child\">\r\n                    <Row>{cards}</Row>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","module.exports = require(\"axios\");","module.exports = require(\"moment\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");","module.exports = require(\"react-grid-system\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAaA;;;;;;;;;;;;;;;;;;;;;;;;AChvCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AAEA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAEA;AACA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAhKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}