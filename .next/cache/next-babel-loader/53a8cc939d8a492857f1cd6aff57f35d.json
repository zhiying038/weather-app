{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport WeatherReport from \"../components/WeatherReport\";\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n    _this.apiUrl = \"http://api.openweathermap.org/data/2.5/forecast?units=metric&\";\n    _this.apiKey = \"b71deb2566d82e77a5e670d0d3771d2a\";\n    _this.state = {\n      activeCity: undefined,\n      days: new Array(5)\n    };\n    _this.apiRequest = _this.apiRequest.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"updateState\",\n    value: function updateState(data) {\n      var city = data.city.name;\n      var days = [];\n      var dayIndex = this.getDayIndex(data);\n\n      for (var i = 0; i < 6; i++) {\n        days.push({\n          date: data.list[dayIndex[i]].dt_txt,\n          weather: data.list[dayIndex[i]].weather[0].description,\n          icon: data.list[dayIndex[i]].weather[0].icon,\n          temperature: data.list[dayIndex[i]].main.temp\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(this.apiRequest(this.state.activeCity));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"apiRequest\",\n    value: function apiRequest(cityName) {\n      var _this2 = this;\n\n      var weatherUrl;\n      return _regeneratorRuntime.async(function apiRequest$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              weatherUrl = \"\".concat(this.apiUrl, \"q=\").concat(cityName, \"&appid=\").concat(this.apiKey);\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(axios.get(weatherUrl).then(function (res) {\n                _this2.getData(res.json());\n              })[\"catch\"](function (err) {\n                return console.log(err);\n              }));\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this);\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport { Index as default };","map":{"version":3,"sources":["C:/Users/Yoh Zhi Ying/Desktop/weather/pages/index.js"],"names":["React","axios","WeatherReport","Index","props","apiUrl","apiKey","state","activeCity","undefined","days","Array","apiRequest","bind","data","city","name","dayIndex","getDayIndex","i","push","date","list","dt_txt","weather","description","icon","temperature","main","temp","cityName","weatherUrl","get","then","res","getData","json","err","console","log","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;IAEqBC,K;;;;;AACnB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AACA,UAAKC,MAAL,GACE,+DADF;AAEA,UAAKC,MAAL,GAAc,kCAAd;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAEC,SADD;AAEXC,MAAAA,IAAI,EAAE,IAAIC,KAAJ,CAAU,CAAV;AAFK,KAAb;AAIA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,+BAAlB;AATiB;AAUlB;;;;gCAEWC,I,EAAM;AAChB,UAAMC,IAAI,GAAGD,IAAI,CAACC,IAAL,CAAUC,IAAvB;AACA,UAAMN,IAAI,GAAG,EAAb;AACA,UAAMO,QAAQ,GAAG,KAAKC,WAAL,CAAiBJ,IAAjB,CAAjB;;AACA,WAAK,IAAIK,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;AACtBT,QAAAA,IAAI,CAACU,IAAL,CAAU;AACRC,UAAAA,IAAI,EAAEP,IAAI,CAACQ,IAAL,CAAUL,QAAQ,CAACE,CAAD,CAAlB,EAAuBI,MADrB;AAERC,UAAAA,OAAO,EAAEV,IAAI,CAACQ,IAAL,CAAUL,QAAQ,CAACE,CAAD,CAAlB,EAAuBK,OAAvB,CAA+B,CAA/B,EAAkCC,WAFnC;AAGRC,UAAAA,IAAI,EAAEZ,IAAI,CAACQ,IAAL,CAAUL,QAAQ,CAACE,CAAD,CAAlB,EAAuBK,OAAvB,CAA+B,CAA/B,EAAkCE,IAHhC;AAIRC,UAAAA,WAAW,EAAEb,IAAI,CAACQ,IAAL,CAAUL,QAAQ,CAACE,CAAD,CAAlB,EAAuBS,IAAvB,CAA4BC;AAJjC,SAAV;AAMD;AACF;;;;;;;;;+CAGO,KAAKjB,UAAL,CAAgB,KAAKL,KAAL,CAAWC,UAA3B,C;;;;;;;;;;;+BAGSsB,Q;;;;;;;;AACTC,cAAAA,U,aAAgB,KAAK1B,M,eAAWyB,Q,oBAAkB,KAAKxB,M;;+CACvDL,KAAK,CACR+B,GADG,CACCD,UADD,EAEHE,IAFG,CAEE,UAAAC,GAAG,EAAI;AACX,gBAAA,MAAI,CAACC,OAAL,CAAaD,GAAG,CAACE,IAAJ,EAAb;AACD,eAJG,WAKG,UAAAC,GAAG;AAAA,uBAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,eALN,C;;;;;;;;;;;;EAjCyBrC,KAAK,CAACwC,S;;SAApBrC,K","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport WeatherReport from \"../components/WeatherReport\";\r\n\r\nexport default class Index extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.apiUrl =\r\n      \"http://api.openweathermap.org/data/2.5/forecast?units=metric&\";\r\n    this.apiKey = \"b71deb2566d82e77a5e670d0d3771d2a\";\r\n    this.state = {\r\n      activeCity: undefined,\r\n      days: new Array(5)\r\n    };\r\n    this.apiRequest = this.apiRequest.bind(this);\r\n  }\r\n\r\n  updateState(data) {\r\n    const city = data.city.name;\r\n    const days = [];\r\n    const dayIndex = this.getDayIndex(data);\r\n    for (let i=0; i<6; i++) {\r\n      days.push({\r\n        date: data.list[dayIndex[i]].dt_txt,\r\n        weather: data.list[dayIndex[i]].weather[0].description,\r\n        icon: data.list[dayIndex[i]].weather[0].icon,\r\n        temperature: data.list[dayIndex[i]].main.temp\r\n      });\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.apiRequest(this.state.activeCity);\r\n  }\r\n\r\n  async apiRequest(cityName) {\r\n    const weatherUrl = `${this.apiUrl}q=${cityName}&appid=${this.apiKey}`;\r\n    await axios\r\n      .get(weatherUrl)\r\n      .then(res => {\r\n        this.getData(res.json());\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}