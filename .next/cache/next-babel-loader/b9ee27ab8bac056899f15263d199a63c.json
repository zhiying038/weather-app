{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Yoh Zhi Ying\\\\Desktop\\\\weather\\\\components\\\\WeatherReport.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Col } from \"react-grid-system\";\n\nvar WeatherReport =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(WeatherReport, _React$Component);\n\n  function WeatherReport() {\n    _classCallCheck(this, WeatherReport);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WeatherReport).apply(this, arguments));\n  }\n\n  _createClass(WeatherReport, [{\n    key: \"getIcon\",\n    value: function getIcon(description, time) {\n      var icon = \"\";\n      if (description.includes(\"clear sky\") && time >= 6 && time <= 18) icon = \"day\";else if (description.includes(\"clouds\") && time >= 6 && time <= 18) icon = \"cloudy\";else if (description.includes(\"clear sky\") && (time >= 0 && time <= 6 || time >= 21)) icon = \"moon\";else if (description.includes(\"clouds\") && (time >= 0 && time <= 6 || time >= 21)) icon = \"cloudymoon\";else if (description.includes(\"rain\")) icon = \"rain\";\n      return icon;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var icon = this.getIcon(this.props.description, this.props.time);\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, this.props.city), __jsx(Col, {\n        lg: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, this.props.date), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.props.maxTemp, \"\\xB0 / \"), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.props.minTemp, \"\\xB0\")), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Humidity: \", this.props.humidity), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Weather: \", this.props.description)));\n    }\n  }]);\n\n  return WeatherReport;\n}(React.Component);\n\nexport { WeatherReport as default };","map":{"version":3,"sources":["C:/Users/Yoh Zhi Ying/Desktop/weather/components/WeatherReport.js"],"names":["React","Col","WeatherReport","description","time","icon","includes","getIcon","props","city","date","maxTemp","minTemp","humidity","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,mBAApB;;IAEqBC,a;;;;;;;;;;;;;4BACXC,W,EAAaC,I,EAAM;AACzB,UAAIC,IAAI,GAAG,EAAX;AACA,UAAIF,WAAW,CAACG,QAAZ,CAAqB,WAArB,KAAqCF,IAAI,IAAI,CAA7C,IAAkDA,IAAI,IAAI,EAA9D,EACEC,IAAI,GAAG,KAAP,CADF,KAEK,IAAIF,WAAW,CAACG,QAAZ,CAAqB,QAArB,KAAkCF,IAAI,IAAI,CAA1C,IAA+CA,IAAI,IAAI,EAA3D,EACHC,IAAI,GAAG,QAAP,CADG,KAEA,IACHF,WAAW,CAACG,QAAZ,CAAqB,WAArB,MACEF,IAAI,IAAI,CAAR,IAAaA,IAAI,IAAI,CAAtB,IAA4BA,IAAI,IAAI,EADrC,CADG,EAIHC,IAAI,GAAG,MAAP,CAJG,KAKA,IACHF,WAAW,CAACG,QAAZ,CAAqB,QAArB,MACEF,IAAI,IAAI,CAAR,IAAaA,IAAI,IAAI,CAAtB,IAA4BA,IAAI,IAAI,EADrC,CADG,EAIHC,IAAI,GAAG,YAAP,CAJG,KAKA,IAAIF,WAAW,CAACG,QAAZ,CAAqB,MAArB,CAAJ,EAAkCD,IAAI,GAAG,MAAP;AACvC,aAAOA,IAAP;AACD;;;6BAEQ;AACP,UAAIA,IAAI,GAAG,KAAKE,OAAL,CAAa,KAAKC,KAAL,CAAWL,WAAxB,EAAqC,KAAKK,KAAL,CAAWJ,IAAhD,CAAX;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKI,KAAL,CAAWC,IAAhB,CADF,EAEE,MAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKD,KAAL,CAAWE,IAAjB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAEL,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKG,KAAL,CAAWG,OAAlB,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKH,KAAL,CAAWI,OAAlB,SAFF,CALF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgB,KAAKJ,KAAL,CAAWK,QAA3B,CATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAe,KAAKL,KAAL,CAAWL,WAA1B,CAVF,CAFF,CADF;AAiBD;;;;EAxCwCH,KAAK,CAACc,S;;SAA5BZ,a","sourcesContent":["import React from \"react\";\r\nimport { Col } from \"react-grid-system\";\r\n\r\nexport default class WeatherReport extends React.Component {\r\n  getIcon(description, time) {\r\n    let icon = \"\";\r\n    if (description.includes(\"clear sky\") && time >= 6 && time <= 18)\r\n      icon = \"day\";\r\n    else if (description.includes(\"clouds\") && time >= 6 && time <= 18)\r\n      icon = \"cloudy\";\r\n    else if (\r\n      description.includes(\"clear sky\") &&\r\n      ((time >= 0 && time <= 6) || time >= 21)\r\n    )\r\n      icon = \"moon\";\r\n    else if (\r\n      description.includes(\"clouds\") &&\r\n      ((time >= 0 && time <= 6) || time >= 21)\r\n    )\r\n      icon = \"cloudymoon\";\r\n    else if (description.includes(\"rain\")) icon = \"rain\";\r\n    return icon;\r\n  }\r\n\r\n  render() {\r\n    let icon = this.getIcon(this.props.description, this.props.time);\r\n    return (\r\n      <div>\r\n        <h2>{this.props.city}</h2>\r\n        <Col lg={2}>\r\n          <div>{this.props.date}</div>\r\n          <div>\r\n            <span className={icon}></span>\r\n          </div>\r\n          <div>\r\n            <span>{this.props.maxTemp}&deg; / </span>\r\n            <span>{this.props.minTemp}&deg;</span>\r\n          </div>\r\n          <div>Humidity: {this.props.humidity}</div>\r\n          <div>Weather: {this.props.description}</div>\r\n        </Col>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}