{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yoh Zhi Ying\\\\Desktop\\\\weather\\\\components\\\\WeatherReport.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Col } from \"react-grid-system\";\nexport default class WeatherReport extends React.Component {\n  getIcon(description, time) {\n    let icon = \"\";\n    if (description.includes(\"clear sky\") && time >= 6 && time <= 18) icon = \"day\";else if (description.includes(\"clouds\") && time >= 6 && time <= 18) icon = \"cloudy\";else if (description.includes(\"clear sky\") && (time >= 0 && time <= 6 || time >= 21)) icon = \"moon\";else if (description.includes(\"clouds\") && (time >= 0 && time <= 6 || time >= 21)) icon = \"cloudymoon\";else if (description.includes(\"rain\")) icon = \"rain\";\n    return icon;\n  }\n\n  render() {\n    let icon = this.getIcon(this.props.description, this.props.time);\n    return __jsx(Col, {\n      lg: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.props.date), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: `../images/${icon}.png`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, Math.round(this.props.minTemp), \"\\xB0 / \"), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, Math.round(this.props.maxTemp), \"\\xB0\")), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Humidity: \", this.props.humidity), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Weather: \", this.props.description));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Yoh Zhi Ying/Desktop/weather/components/WeatherReport.js"],"names":["React","Col","WeatherReport","Component","getIcon","description","time","icon","includes","render","props","date","Math","round","minTemp","maxTemp","humidity"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,mBAApB;AAEA,eAAe,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA4C;AACzDC,EAAAA,OAAO,CAACC,WAAD,EAAcC,IAAd,EAAoB;AACzB,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIF,WAAW,CAACG,QAAZ,CAAqB,WAArB,KAAqCF,IAAI,IAAI,CAA7C,IAAkDA,IAAI,IAAI,EAA9D,EACEC,IAAI,GAAG,KAAP,CADF,KAEK,IAAIF,WAAW,CAACG,QAAZ,CAAqB,QAArB,KAAkCF,IAAI,IAAI,CAA1C,IAA+CA,IAAI,IAAI,EAA3D,EACHC,IAAI,GAAG,QAAP,CADG,KAEA,IACHF,WAAW,CAACG,QAAZ,CAAqB,WAArB,MACEF,IAAI,IAAI,CAAR,IAAaA,IAAI,IAAI,CAAtB,IAA4BA,IAAI,IAAI,EADrC,CADG,EAIHC,IAAI,GAAG,MAAP,CAJG,KAKA,IACHF,WAAW,CAACG,QAAZ,CAAqB,QAArB,MACEF,IAAI,IAAI,CAAR,IAAaA,IAAI,IAAI,CAAtB,IAA4BA,IAAI,IAAI,EADrC,CADG,EAIHC,IAAI,GAAG,YAAP,CAJG,KAKA,IAAIF,WAAW,CAACG,QAAZ,CAAqB,MAArB,CAAJ,EAAkCD,IAAI,GAAG,MAAP;AACvC,WAAOA,IAAP;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,QAAIF,IAAI,GAAG,KAAKH,OAAL,CAAa,KAAKM,KAAL,CAAWL,WAAxB,EAAqC,KAAKK,KAAL,CAAWJ,IAAhD,CAAX;AACA,WACE,MAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKI,KAAL,CAAWC,IAAjB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAG,aAAYJ,IAAK,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADF,CAFF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOK,IAAI,CAACC,KAAL,CAAW,KAAKH,KAAL,CAAWI,OAAtB,CAAP,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOF,IAAI,CAACC,KAAL,CAAW,KAAKH,KAAL,CAAWK,OAAtB,CAAP,SAFF,CAPF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgB,KAAKL,KAAL,CAAWM,QAA3B,CAXF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAe,KAAKN,KAAL,CAAWL,WAA1B,CAZF,CADF;AAgBD;;AAvCwD","sourcesContent":["import React from \"react\";\r\nimport { Col } from \"react-grid-system\";\r\n\r\nexport default class WeatherReport extends React.Component {\r\n  getIcon(description, time) {\r\n    let icon = \"\";\r\n    if (description.includes(\"clear sky\") && time >= 6 && time <= 18)\r\n      icon = \"day\";\r\n    else if (description.includes(\"clouds\") && time >= 6 && time <= 18)\r\n      icon = \"cloudy\";\r\n    else if (\r\n      description.includes(\"clear sky\") &&\r\n      ((time >= 0 && time <= 6) || time >= 21)\r\n    )\r\n      icon = \"moon\";\r\n    else if (\r\n      description.includes(\"clouds\") &&\r\n      ((time >= 0 && time <= 6) || time >= 21)\r\n    )\r\n      icon = \"cloudymoon\";\r\n    else if (description.includes(\"rain\")) icon = \"rain\";\r\n    return icon;\r\n  }\r\n\r\n  render() {\r\n    let icon = this.getIcon(this.props.description, this.props.time);\r\n    return (\r\n      <Col lg={2}>\r\n        <div>{this.props.date}</div>\r\n        <div>\r\n          <span>\r\n              <img src={`../images/${icon}.png`} />\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <span>{Math.round(this.props.minTemp)}&deg; / </span>\r\n          <span>{Math.round(this.props.maxTemp)}&deg;</span>\r\n        </div>\r\n        <div>Humidity: {this.props.humidity}</div>\r\n        <div>Weather: {this.props.description}</div>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}