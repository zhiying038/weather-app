{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yoh Zhi Ying\\\\Desktop\\\\weather\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport WeatherCard from '../components/WeatherCard';\nconst API_KEY = \"b71deb2566d82e77a5e670d0d3771d2a\";\nconst API_URL = \"http://api.openweathermap.org/data/2.5/forecast?units=metric&\";\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"updateState\", data => {\n      const city = data.city.name;\n      const days = [];\n      const dayIndices = this.getDayIndices(data);\n\n      for (let i = 0; i < 5; i++) {\n        days.push({\n          date: data.list[dayIndices[i]].dt_txt,\n          description: data.list[dayIndices[i]].weather[0].description,\n          icon: data.list[dayIndices[i]].weather[0].icon,\n          temperature: data.list[dayIndices[i]].main.temp\n        });\n      }\n\n      this.setState({\n        city: city,\n        days: days\n      });\n    });\n\n    _defineProperty(this, \"apiRequest\", async city => {\n      const data = await fetch(`${API_URL}q=${city}&APPID=${API_KEY}`).then(res => res.json());\n\n      if (data.cod === \"200\") {\n        await this.updateState(data);\n        return true;\n      } else return false;\n    });\n\n    _defineProperty(this, \"getDayIndicies\", data => {\n      let dayIndices = [];\n      dayIndices.push(0);\n      let index = 0;\n      let tmp = data.list[index].dt_txt.slice(8, 10);\n\n      for (let i = 0; i < 4; i++) {\n        while (tmp === data.list[index].dt_txt.slice(8, 10) || data.list[index].dt_txt.slice(11, 13) !== \"15\") {\n          index++;\n        }\n\n        dayIndices.push(index);\n        tmp = data.list[index].dt_txt.slice(8, 10);\n      }\n\n      return dayIndices;\n    });\n\n    state = {\n      city: undefined,\n      days: new Array(5)\n    };\n    this.apiRequest = this.apiRequest.bind(this);\n  }\n\n  render() {\n    __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, __jsx(WeatherCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Yoh Zhi Ying/Desktop/weather/pages/index.js"],"names":["React","WeatherCard","API_KEY","API_URL","Index","Component","constructor","props","data","city","name","days","dayIndices","getDayIndices","i","push","date","list","dt_txt","description","weather","icon","temperature","main","temp","setState","fetch","then","res","json","cod","updateState","index","tmp","slice","state","undefined","Array","apiRequest","bind","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport WeatherCard from '../components/WeatherCard';\r\n\r\nconst API_KEY = \"b71deb2566d82e77a5e670d0d3771d2a\";\r\nconst API_URL = \"http://api.openweathermap.org/data/2.5/forecast?units=metric&\";\r\n\r\nexport default class Index extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    state = {\r\n      city: undefined,\r\n      days: new Array(5)\r\n    };\r\n    this.apiRequest = this.apiRequest.bind(this);\r\n  }\r\n\r\n  updateState = data => {\r\n    const city = data.city.name;\r\n    const days = [];\r\n    const dayIndices = this.getDayIndices(data);\r\n\r\n    for (let i = 0; i < 5; i++) {\r\n      days.push({\r\n        date: data.list[dayIndices[i]].dt_txt,\r\n        description: data.list[dayIndices[i]].weather[0].description,\r\n        icon: data.list[dayIndices[i]].weather[0].icon,\r\n        temperature: data.list[dayIndices[i]].main.temp\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      city: city,\r\n      days: days\r\n    });\r\n  };\r\n\r\n  apiRequest = async city => {\r\n    const data = await fetch(`${API_URL}q=${city}&APPID=${API_KEY}`).then(res =>\r\n      res.json()\r\n    );\r\n    if (data.cod === \"200\") {\r\n      await this.updateState(data);\r\n      return true;\r\n    } else return false;\r\n  };\r\n\r\n  getDayIndicies = data => {\r\n    let dayIndices = [];\r\n    dayIndices.push(0);\r\n\r\n    let index = 0;\r\n    let tmp = data.list[index].dt_txt.slice(8, 10);\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n      while (\r\n        tmp === data.list[index].dt_txt.slice(8, 10) ||\r\n        data.list[index].dt_txt.slice(11, 13) !== \"15\"\r\n      ) {\r\n        index++;\r\n      }\r\n      dayIndices.push(index);\r\n      tmp = data.list[index].dt_txt.slice(8, 10);\r\n    }\r\n    return dayIndices;\r\n  };\r\n\r\n  render() {\r\n      <div>\r\n        <WeatherCard />\r\n      </div>\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}