{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yoh Zhi Ying\\\\Desktop\\\\weather\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport WeatherReport from \"../components/WeatherReport\";\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.apiUrl = \"http://api.openweathermap.org/data/2.5/forecast?units=metric&\";\n    this.apiKey = \"b71deb2566d82e77a5e670d0d3771d2a\";\n    this.state = {\n      city: undefined,\n      days: new Array(5)\n    };\n    this.apiRequest = this.apiRequest.bind(this);\n  }\n\n  updateState(data) {\n    const city = data.city.name;\n    const days = [];\n    const dayIndex = this.getDayIndex(data);\n\n    for (let i = 0; i < 6; i++) {\n      days.push({\n        date: data.list[dayIndex[i]].dt_txt,\n        weather: data.list[dayIndex[i]].weather[0].description,\n        icon: data.list[dayIndex[i]].weather[0].icon,\n        temperature: data.list[dayIndex[i]].main.temp\n      });\n    }\n\n    this.setState({\n      city: city,\n      days: days\n    });\n  }\n\n  async componentDidMount() {\n    await this.apiRequest(this.state.activeCity);\n  }\n\n  async apiRequest(cityName) {\n    const weatherUrl = `${this.apiUrl}q=${cityName}&appid=${this.apiKey}`;\n    await axios.get(weatherUrl).then(res => {\n      this.getData(res.json());\n    }).catch(err => console.log(err));\n  }\n\n  getDayIndex(data) {\n    let dayIndex = [];\n    dayIndex.push(0);\n    let index = 0;\n    let time = data.list[index].dt_txt.slice(8, 10);\n\n    for (let i = 0; i < 5; i++) {\n      while (time || data.list[index].dt_txt.slice(11, 13) !== '15') {\n        index++;\n      }\n\n      dayIndex.push(index);\n      time = data.list[index].dt_txt.slice(8, 10);\n    }\n\n    return dayIndex;\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, __jsx(WeatherReport, {\n      city: this.state.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Yoh Zhi Ying/Desktop/weather/pages/index.js"],"names":["React","axios","WeatherReport","Index","Component","constructor","props","apiUrl","apiKey","state","city","undefined","days","Array","apiRequest","bind","updateState","data","name","dayIndex","getDayIndex","i","push","date","list","dt_txt","weather","description","icon","temperature","main","temp","setState","componentDidMount","activeCity","cityName","weatherUrl","get","then","res","getData","json","catch","err","console","log","index","time","slice","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport WeatherReport from \"../components/WeatherReport\";\r\n\r\nexport default class Index extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.apiUrl =\r\n      \"http://api.openweathermap.org/data/2.5/forecast?units=metric&\";\r\n    this.apiKey = \"b71deb2566d82e77a5e670d0d3771d2a\";\r\n    this.state = {\r\n      city: undefined,\r\n      days: new Array(5)\r\n    };\r\n    this.apiRequest = this.apiRequest.bind(this);\r\n  }\r\n\r\n  updateState(data) {\r\n    const city = data.city.name;\r\n    const days = [];\r\n    const dayIndex = this.getDayIndex(data);\r\n    for (let i=0; i<6; i++) {\r\n      days.push({\r\n        date: data.list[dayIndex[i]].dt_txt,\r\n        weather: data.list[dayIndex[i]].weather[0].description,\r\n        icon: data.list[dayIndex[i]].weather[0].icon,\r\n        temperature: data.list[dayIndex[i]].main.temp\r\n      });\r\n    }\r\n    this.setState({\r\n      city: city,\r\n      days: days\r\n    })\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.apiRequest(this.state.activeCity);\r\n  }\r\n\r\n  async apiRequest(cityName) {\r\n    const weatherUrl = `${this.apiUrl}q=${cityName}&appid=${this.apiKey}`;\r\n    await axios\r\n      .get(weatherUrl)\r\n      .then(res => {\r\n        this.getData(res.json());\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  getDayIndex(data) {\r\n    let dayIndex = [];\r\n    dayIndex.push(0);\r\n    let index = 0;\r\n    let time = data.list[index].dt_txt.slice(8,10);\r\n    for (let i=0; i<5; i++) {\r\n      while (time || data.list[index].dt_txt.slice(11,13) !== '15') {\r\n        index++;\r\n      }\r\n      dayIndex.push(index);\r\n      time = data.list[index].dt_txt.slice(8,10);\r\n    }\r\n    return dayIndex;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <WeatherReport city={this.state.city} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}