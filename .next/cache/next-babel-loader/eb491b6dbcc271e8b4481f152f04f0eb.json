{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Yoh Zhi Ying\\\\Desktop\\\\weather\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport \"../styles/styles.scss\";\nimport WeatherReport from \"../components/WeatherReport\";\nimport SearchCity from \"../components/SearchCity\";\nimport WeatherCard from \"../components/WeatherCard\";\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n    _this.apiUrl = \"http://api.openweathermap.org/data/2.5/forecast?units=metric&\";\n    _this.apiKey = \"b71deb2566d82e77a5e670d0d3771d2a\";\n    _this.state = {\n      city: undefined,\n      days: new Array(5)\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"updateState\",\n    value: function updateState(data) {\n      var city = data.city.name;\n      var days = [];\n      var dayIndex = this.getDayIndex(data);\n\n      for (var i = 0; i < 6; i++) {\n        days.push({\n          date: data.list[dayIndex[i]].dt_txt,\n          weather: data.list[dayIndex[i]].weather[0].description,\n          icon: data.list[dayIndex[i]].weather[0].icon,\n          temperature: data.list[dayIndex[i]].main.temp\n        });\n      }\n\n      this.setState({\n        city: city,\n        days: days\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(this.apiRequest(this.state.activeCity));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"apiRequest\",\n    value: function apiRequest(cityName) {\n      var _this2 = this;\n\n      var weatherUrl;\n      return _regeneratorRuntime.async(function apiRequest$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              weatherUrl = \"\".concat(this.apiUrl, \"q=\").concat(cityName, \"&appid=\").concat(this.apiKey);\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(axios.get(weatherUrl).then(function (res) {\n                _this2.getData(res.json());\n              })[\"catch\"](function (err) {\n                return console.log(err);\n              }));\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"getDayIndex\",\n    value: function getDayIndex(data) {\n      var dayIndex = [];\n      dayIndex.push(0);\n      var index = 0;\n      var time = data.list[index].dt_txt.slice(8, 10);\n\n      for (var i = 0; i < 5; i++) {\n        while (time || data.list[index].dt_txt.slice(11, 13) !== '15') {\n          index++;\n        }\n\n        dayIndex.push(index);\n        time = data.list[index].dt_txt.slice(8, 10);\n      }\n\n      return dayIndex;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, __jsx(WeatherReport, {\n        city: this.state.city,\n        data: this.state.days[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, __jsx(SearchCity, {\n        city: this.state.city,\n        apiRrequest: this.apiRequest.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), __jsx(WeatherCard, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport { Index as default };","map":{"version":3,"sources":["C:/Users/Yoh Zhi Ying/Desktop/weather/pages/index.js"],"names":["React","axios","WeatherReport","SearchCity","WeatherCard","Index","props","apiUrl","apiKey","state","city","undefined","days","Array","data","name","dayIndex","getDayIndex","i","push","date","list","dt_txt","weather","description","icon","temperature","main","temp","setState","apiRequest","activeCity","cityName","weatherUrl","get","then","res","getData","json","err","console","log","index","time","slice","bind","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../styles/styles.scss\";\r\nimport WeatherReport from \"../components/WeatherReport\";\r\nimport SearchCity from \"../components/SearchCity\";\r\nimport WeatherCard from \"../components/WeatherCard\";\r\n\r\nexport default class Index extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.apiUrl =\r\n      \"http://api.openweathermap.org/data/2.5/forecast?units=metric&\";\r\n    this.apiKey = \"b71deb2566d82e77a5e670d0d3771d2a\";\r\n    this.state = {\r\n      city: undefined,\r\n      days: new Array(5)\r\n    };\r\n  }\r\n\r\n  updateState(data) {\r\n    const city = data.city.name;\r\n    const days = [];\r\n    const dayIndex = this.getDayIndex(data);\r\n    for (let i=0; i<6; i++) {\r\n      days.push({\r\n        date: data.list[dayIndex[i]].dt_txt,\r\n        weather: data.list[dayIndex[i]].weather[0].description,\r\n        icon: data.list[dayIndex[i]].weather[0].icon,\r\n        temperature: data.list[dayIndex[i]].main.temp\r\n      });\r\n    }\r\n    this.setState({\r\n      city: city,\r\n      days: days\r\n    })\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.apiRequest(this.state.activeCity);\r\n  }\r\n\r\n  async apiRequest(cityName) {\r\n    const weatherUrl = `${this.apiUrl}q=${cityName}&appid=${this.apiKey}`;\r\n    await axios\r\n      .get(weatherUrl)\r\n      .then(res => {\r\n        this.getData(res.json());\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  getDayIndex(data) {\r\n    let dayIndex = [];\r\n    dayIndex.push(0);\r\n    let index = 0;\r\n    let time = data.list[index].dt_txt.slice(8,10);\r\n    for (let i=0; i<5; i++) {\r\n      while (time || data.list[index].dt_txt.slice(11,13) !== '15') {\r\n        index++;\r\n      }\r\n      dayIndex.push(index);\r\n      time = data.list[index].dt_txt.slice(8,10);\r\n    }\r\n    return dayIndex;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <WeatherReport city={this.state.city} data={this.state.days[0]}>\r\n          <SearchCity city={this.state.city} apiRrequest={this.apiRequest.bind(this)} />\r\n          <WeatherCard />\r\n        </WeatherReport>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}